/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
//import javax.swing.text.Document;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.LineSeparator;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import DTO.Account;
import DTO.KhachHang;
import DTO.Staff;
import DTO.Supplier;
import DAL.KhachHang_DAO;
import DTO.ChiTietHoaDon_DTO;
import DTO.HoaDon_DTO;
import DTO.Book_DTO;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.LineSeparator;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import javax.swing.*;
import javax.swing.event.DocumentListener;
import javax.swing.event.UndoableEditListener;
import javax.swing.table.*;
import javax.swing.text.*;

/**
 *
 * @author Admin
 */
public class BillCustomerDialog extends javax.swing.JDialog {

    /**
     * Creates new form ThanhToanKhachHang
     */
    private DefaultTableModel model;
    private boolean trangThaiEvent = false;
    private SoLuongMuaSach diagmuasach ;
    private HomeStaff orderBook;
    private ArrayList<ChiTietHoaDon_DTO> CTHDs;
    private ArrayList<HoaDon_DTO> HDs;
    private ArrayList<Book_DTO> books;
    private ArrayList<KhachHang> customers;
    private DAL.ReadDataFromSQL readData;
    private DAL.KhachHang_DAO khDAO = new KhachHang_DAO();
    private String idKHmuaSach = "";
    private float soTienKhachTra ;
    
    
    
    public BillCustomerDialog(java.awt.Frame parent, boolean modal,HomeStaff orderBook) {
        super(parent, modal);
        initComponents();
        this.orderBook = orderBook;
        this.setLocationRelativeTo(null);
        model = (DefaultTableModel) tblChiTietHoaDon.getModel();
        loadDataInTable();
        loadDataFromSQL();
//        for(KhachHang kh: customers){
//            System.out.println(kh.toString());
//        }
        this.showID();
        this.setPhimtat();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Pan_hoaDon = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChiTietHoaDon = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMaHoaDon = new javax.swing.JTextField();
        txtMaNhanVien = new javax.swing.JTextField();
        txtMaKhachHang = new javax.swing.JTextField();
        txtTongTien = new javax.swing.JTextField();
        txtKhachTra = new javax.swing.JTextField();
        txt_ThoiLai = new javax.swing.JTextField();
        Button_inHoaDon = new javax.swing.JButton();
        Button_huy = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Pan_hoaDon.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HÓA ĐƠN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("MÃ HÓA ĐƠN:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("CỬA HÀNG SÁCH");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("MÃ NHÂN VIÊN:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("HÓA ĐƠN BAO GỒM:");

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tblChiTietHoaDon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblChiTietHoaDon.setForeground(new java.awt.Color(102, 102, 102));
        tblChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ", "TÊN SÁCH", "SỐ LƯỢNG", "GIÁ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblChiTietHoaDon.setSelectionBackground(new java.awt.Color(0, 153, 255));
        jScrollPane1.setViewportView(tblChiTietHoaDon);
        if (tblChiTietHoaDon.getColumnModel().getColumnCount() > 0) {
            tblChiTietHoaDon.getColumnModel().getColumn(0).setMinWidth(100);
            tblChiTietHoaDon.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblChiTietHoaDon.getColumnModel().getColumn(0).setMaxWidth(100);
            tblChiTietHoaDon.getColumnModel().getColumn(2).setMinWidth(80);
            tblChiTietHoaDon.getColumnModel().getColumn(2).setPreferredWidth(80);
            tblChiTietHoaDon.getColumnModel().getColumn(2).setMaxWidth(80);
            tblChiTietHoaDon.getColumnModel().getColumn(3).setMinWidth(100);
            tblChiTietHoaDon.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblChiTietHoaDon.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("THÀNH TIỀN + (VAT) :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("KHÁCH ĐƯA:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("THÓI LẠI:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("MÃ KH(NẾU CÓ):");

        txtMaHoaDon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaHoaDon.setForeground(new java.awt.Color(102, 102, 102));
        txtMaHoaDon.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtMaHoaDon.setEnabled(false);

        txtMaNhanVien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaNhanVien.setForeground(new java.awt.Color(102, 102, 102));
        txtMaNhanVien.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtMaNhanVien.setEnabled(false);

        txtTongTien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTongTien.setForeground(new java.awt.Color(102, 102, 102));
        txtTongTien.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtTongTien.setEnabled(false);

        txtKhachTra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKhachTraFocusLost(evt);
            }
        });
        txtKhachTra.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtKhachTraInputMethodTextChanged(evt);
            }
        });
        txtKhachTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKhachTraActionPerformed(evt);
            }
        });
        txtKhachTra.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtKhachTraPropertyChange(evt);
            }
        });
        txtKhachTra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKhachTraKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKhachTraKeyTyped(evt);
            }
        });

        txt_ThoiLai.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_ThoiLai.setForeground(new java.awt.Color(102, 102, 102));
        txt_ThoiLai.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txt_ThoiLai.setEnabled(false);

        javax.swing.GroupLayout Pan_hoaDonLayout = new javax.swing.GroupLayout(Pan_hoaDon);
        Pan_hoaDon.setLayout(Pan_hoaDonLayout);
        Pan_hoaDonLayout.setHorizontalGroup(
            Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pan_hoaDonLayout.createSequentialGroup()
                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Pan_hoaDonLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Pan_hoaDonLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Pan_hoaDonLayout.createSequentialGroup()
                                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(txtMaHoaDon)))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(Pan_hoaDonLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(Pan_hoaDonLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Pan_hoaDonLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_ThoiLai, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        Pan_hoaDonLayout.setVerticalGroup(
            Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pan_hoaDonLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(18, 23, Short.MAX_VALUE)
                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtMaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(Pan_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_ThoiLai, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        Button_inHoaDon.setBackground(new java.awt.Color(0, 255, 0));
        Button_inHoaDon.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Button_inHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        Button_inHoaDon.setText("IN HÓA ĐƠN");
        Button_inHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_inHoaDonActionPerformed(evt);
            }
        });

        Button_huy.setBackground(new java.awt.Color(255, 0, 51));
        Button_huy.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Button_huy.setForeground(new java.awt.Color(255, 255, 255));
        Button_huy.setText("HỦY");
        Button_huy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_huyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Button_huy, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Button_inHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Pan_hoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Pan_hoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Button_inHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_huy, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_inHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_inHoaDonActionPerformed
        // TODO add your handling code here:
        if(!txtKhachTra.getText().equals("")){
//            Float khachTra = Float.parseFloat(jTextField_KhachDua.getText());
            float total = orderBook.getTongTienKhachMua()  ;
            float totalAndVAT = (float) (total + total*0.05);
           
            if(totalAndVAT>soTienKhachTra){
                JOptionPane.showMessageDialog(null, "Số tiên không đủ");
            }
            else if(totalAndVAT<=soTienKhachTra){
                float tienThoi = soTienKhachTra - totalAndVAT;
                txt_ThoiLai.setText(formatTotalPrice(tienThoi)+"");
                if(txtMaKhachHang.getText().equals("")) {
                    idKHmuaSach = "NOID";
                    int i = JOptionPane.showConfirmDialog(this, "Bạn có chắc là không nhập ID khách hàng không");
                    if(i==JOptionPane.YES_OPTION){
                        this.trangThaiEvent =true ;
                        inHoaDon2();        
                        this.setVisible(false);
                    }
                }
                else{
                    idKHmuaSach = txtMaKhachHang.getText();
                    if(checkID(idKHmuaSach)==false){
                        JOptionPane.showMessageDialog(this, "ID KHÁCH HÀNG KHÔNG TỒN TẠI");
                    }
                    else if(checkID(idKHmuaSach))
                    {
                        congDiemChoKH(idKHmuaSach);
                         this.trangThaiEvent =true ;
                         inHoaDon2();
                         
                      //  JOptionPane.showMessageDialog(this, "ID KHÁCH HÀNG  TỒN TẠI");
                        this.setVisible(false);
                    }
                   

                     }
            }
           
        }
        else{
            JOptionPane.showMessageDialog(this, "BẠN CHƯA NHẬP SỐ TIỀN KHÁCH TRẢ!");
        }
//        this.trangThaiEvent =true ;
//       if(txt_MAKH.getText().equals("")) {
//           idKHmuaSach = "NOID";
//           int i = JOptionPane.showConfirmDialog(this, "Bạn có chắc là không nhập ID khách hàng không");
//           if(i==JOptionPane.YES_OPTION)
//               this.setVisible(false);
////           else
////               this.setVisible(true);
////           
//       }
//       else{
//           idKHmuaSach = txt_MAKH.getText();
//           if(checkID(idKHmuaSach)==false){
//               JOptionPane.showMessageDialog(this, "ID KHÁCH HÀNG KHÔNG TỒN TẠI");
//           }
//           else if(checkID(idKHmuaSach))
//           {
//             //  JOptionPane.showMessageDialog(this, "ID KHÁCH HÀNG  TỒN TẠI");
//               this.setVisible(false);
//           }
//                
//          
//       }
           
       
     
    }//GEN-LAST:event_Button_inHoaDonActionPerformed

    private void txtKhachTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKhachTraActionPerformed
        // TODO add your handling code here:
        if(!txtKhachTra.getText().equals("")){
            soTienKhachTra = Float.parseFloat(txtKhachTra.getText());
            float total = orderBook.getTongTienKhachMua()  ;
            float totalAndVAT = (float) (total + total*0.05);
//             float totalANDVAT = (float) (getTotalPrice()+(getTotalPrice()*0.05));
           
            if(totalAndVAT>soTienKhachTra){
                JOptionPane.showMessageDialog(null, "Số tiên không đủ");
            }
            else{
                float tienThoi = soTienKhachTra - totalAndVAT;
                txt_ThoiLai.setText(formatTotalPrice(tienThoi)+"");
                //jTextField_KhachDua.setText(formatTotalPrice(Float.parseFloat(jTextField_KhachDua.getText()))+"");
            }
        }
    }//GEN-LAST:event_txtKhachTraActionPerformed

    private void txtKhachTraPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtKhachTraPropertyChange
        // TODO add your handling code here:
//         if(!jTextField5.getText().equals("")){
//            float khachTra = Float.parseFloat(jTextField5.getText());
//            float tongTien = Float.parseFloat(jTextField4.getText());
//            if(tongTien>khachTra){
//                JOptionPane.showMessageDialog(null, "Số tiên không đủ");
//            }
//            else{
//                float tienThoi = khachTra - tongTien;
//                jTextField6.setText(tienThoi+"");
//            }
//        }
    }//GEN-LAST:event_txtKhachTraPropertyChange

    private void txtKhachTraInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtKhachTraInputMethodTextChanged
        // TODO add your handling code here:
//        if(!jTextField5.getText().equals("")){
//            float khachTra = Float.parseFloat(jTextField5.getText());
//            float tongTien = Float.parseFloat(jTextField4.getText());
//            if(tongTien>khachTra){
//                JOptionPane.showMessageDialog(null, "Số tiên không đủ");
//            }
//            else{
//                float tienThoi = khachTra - tongTien;
//                jTextField6.setText(tienThoi+"");
//            }
//        }
    }//GEN-LAST:event_txtKhachTraInputMethodTextChanged

    private void txtKhachTraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKhachTraFocusLost
        // TODO add your handling code here:
//       double khachDua = Double.parseDouble(jTextField5.getText());
//        double tongTien = Double.parseDouble(jTextField4.getText());
//        double thoiLai = khachDua - tongTien;
//        jTextField6.setText(String.valueOf(thoiLai));
    }//GEN-LAST:event_txtKhachTraFocusLost

    private void txtKhachTraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKhachTraKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == '.')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtKhachTraKeyTyped

    private void txtKhachTraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKhachTraKeyReleased
        // TODO add your handling code here:
     
    }//GEN-LAST:event_txtKhachTraKeyReleased

    private void Button_huyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_huyActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_Button_huyActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillCustomerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillCustomerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillCustomerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillCustomerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BillCustomerDialog dialog = new BillCustomerDialog(new javax.swing.JFrame(), true, new HomeStaff());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_huy;
    private javax.swing.JButton Button_inHoaDon;
    private javax.swing.JPanel Pan_hoaDon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblChiTietHoaDon;
    private javax.swing.JTextField txtKhachTra;
    private javax.swing.JTextField txtMaHoaDon;
    private javax.swing.JTextField txtMaKhachHang;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtTongTien;
    private javax.swing.JTextField txt_ThoiLai;
    // End of variables declaration//GEN-END:variables

    //CODE
     //code
    public ArrayList<ChiTietHoaDon_DTO> getCTHDs() {
        return CTHDs;
    }

    public void setCTHDs(ArrayList<ChiTietHoaDon_DTO> CTHDs) {
        this.CTHDs = CTHDs;
    }

   public ArrayList<ChiTietHoaDon_DTO> getListCTHDReturn(){
       CTHDs = new ArrayList<ChiTietHoaDon_DTO>();
       setCTHDs(orderBook.getArrayListCTHDReturn());
       return CTHDs ;
       
   }
    
    public void getListCTHD(){
       CTHDs = new ArrayList<ChiTietHoaDon_DTO>();
       setCTHDs(orderBook.getArrayListCTHDReturn());
       
   }

    public ArrayList<HoaDon_DTO> getHDs() {
        return HDs;
    }

    public void setHDs(ArrayList<HoaDon_DTO> HDs) {
        this.HDs = HDs;
    }

    public ArrayList<HoaDon_DTO> getListHDReturn(){
       HDs = new ArrayList<HoaDon_DTO>();
       setHDs(orderBook.getArrayListHDReturn());
       return HDs ;
       
   }
    
    public void getListHD(){
       HDs = new ArrayList<HoaDon_DTO>();
       setHDs(orderBook.getArrayListHDReturn());
       
   }
    
//    String idHoaDon = "";
//    String nameIDNV = "";
//    
//    
    public void showID(){
    float total = orderBook.getTongTienKhachMua()  ;
    float totalAndVAT = (float) (total + total*0.05);   
    txtMaNhanVien.setText(orderBook.getTxt_IDNV().getText());
   // float total = (float) (getTotalPrice()+(getTotalPrice()*0.05));
    txtTongTien.setText(formatTotalPrice(totalAndVAT)+"");
    txtMaHoaDon.setText("HD"+orderBook.getIdHdAndUpdate());
     
    }

    private  String formatTotalPrice(float total) {
        DecimalFormat formatter = new DecimalFormat("###,###.##");
        return formatter.format(total);
    }
    
    //load data on table
    
    public void loadDataInTable(){
        books = orderBook.getBooks(); 
        CTHDs = orderBook.getArrayListCTHDReturn();
 //       System.out.println("RUN");
//        for(ChiTietHoaDon_DTO cthd : CTHDs){
//            System.out.println(cthd.toString());
//        }
//        for(Book_DTO book : books){
//            System.out.println(book.toString());
//        }
        
        for(ChiTietHoaDon_DTO cthd : CTHDs){
       
            for(Book_DTO book : books){
                if((cthd.getID_Book().equals(book.getID()) )&&(cthd.getID_Bill().equals("tmp"))){
                  
                      Object[] row = {book.getID(), book.getName(),cthd.getQuantity(),cthd.getTotal() };
                    model.addRow(row);
                   // System.out.println(cthd.toString());
                }
            }
        }
        
    }
    
     public float getTotalPrice() {
        float tong = 0; // khởi tạo biến tổng ban đầu là 0
        for (int i = 0; i < tblChiTietHoaDon.getRowCount(); i++) {
            double gia = Double.parseDouble(tblChiTietHoaDon.getValueAt(i, 3).toString()); // lấy giá trị GIA từ bảng
            tong +=  gia; // 
        }
      //  System.out.println("Tổng = " + tong); // hiển thị tổng
        return tong;
    }
    private void updateThoiLai() {
    try {
        double khachDua = Double.parseDouble(txtKhachTra.getText());
        double tongTien = Double.parseDouble(txtTongTien.getText());
        double thoiLai = khachDua - tongTien;
        txt_ThoiLai.setText(String.valueOf(thoiLai));
    } catch (NumberFormatException ex) {
        // Xử lý lỗi
        txt_ThoiLai.setText("");
    }
}

    public boolean isTrangThaiEvent() {
        return trangThaiEvent;
    }

    public void setTrangThaiEvent(boolean trangThaiEvent) {
        this.trangThaiEvent = trangThaiEvent;
    }

    public String getIdKHmuaSach() {
        return idKHmuaSach;
    }

    public void setIdKHmuaSach(String idKHmuaSach) {
        this.idKHmuaSach = idKHmuaSach;
    }
    
    private void loadDataFromSQL() {
 //       staffs = new ArrayList<Staff>();
 //       accounts = new ArrayList<Account>();
        customers = new ArrayList<KhachHang>();
 //       suppliers = new ArrayList<Supplier>();
        //books = new ArrayList<Book>();
//        this.suppliersNoIsDel = new ArrayList<BUS.Supplier>();
//        this.staffsNoIsDel = new ArrayList<BUS.Staff>();
//        this.customersNoIsDel = new ArrayList<BUS.KhachHang>();
//        this.accountsNoIsDel = new ArrayList<BUS.Account>();
       //this.booksNoIsDel = new ArrayList<BUS.Book>();

  //      accounts = (ArrayList<Account>) readData.readAccount();
        customers = (ArrayList<KhachHang>) readData.readCustomer();
  //      staffs = (ArrayList<Staff>) readData.readStaff();
 //       suppliers = (ArrayList<Supplier>) readData.readSupplier();
       // books = (ArrayList<Book>) readData.readBook();
//        this.suppliersNoIsDel = (ArrayList<Supplier>) readData.readSupplierNoIsDel();
//        this.staffsNoIsDel = (ArrayList<Staff>) readData.readStaffNoIsDel();
//        this.customersNoIsDel = (ArrayList<KhachHang>) readData.readCustomerNoIsDel();
//        this.accountsNoIsDel = (ArrayList<Account>) readData.readAccountNoIsDel();
//        this.booksNoIsDel = (ArrayList<Book>) readData.readBookNoIsDel();
//        updateAutoIdCustomer();
//        updateAutoIdStaff();
    }
    public boolean checkID(String key){
        loadDataFromSQL();
         for(KhachHang kh:customers){
               if(kh.getMaKH().equals(key)){
                   
                  return true;   
               }
                              
           }
        return false;
    }
    
    public boolean congDiemChoKH(String key){
        loadDataFromSQL();
        double diemKH = 0;
         for(KhachHang kh:customers){
               if(kh.getMaKH().equals(key)){
                   diemKH = kh.getDiem();
                   kh.setDiem(diemKH+100);
                   khDAO.updateCustomerQuanaty(kh);
                  return true;   
               }
                              
           }
        return false;
    }
  
private void inHoaDon2() {
    // Create a JFileChooser object
    JFileChooser fileChooser = new JFileChooser();

    // Show the dialog box to select the directory
    int userSelection = fileChooser.showSaveDialog(null);

    if (userSelection == JFileChooser.APPROVE_OPTION) {
        // Get the selected directory
        File fileToSave = fileChooser.getSelectedFile();

        String maHoaDon = txtMaHoaDon.getText();
        String maNhanVien = txtMaNhanVien.getText();
        String maKhachHang = idKHmuaSach;

        // Tạo đối tượng PdfPTable để lưu thông tin chi tiết hóa đơn
        PdfPTable table = new PdfPTable(4);
        Font font = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.NORMAL);
        Font font2 = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.BOLD);
        
        // Thêm các tiêu đề cho các cột trong bảng
        PdfPCell cell = new PdfPCell(new Phrase("ID Book", font2));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        cell = new PdfPCell(new Phrase("Name Book", font2));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        cell = new PdfPCell(new Phrase("Quanaty", font2));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        cell = new PdfPCell(new Phrase("Total", font2));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        // Thêm các dòng dữ liệu vào bảng
        for (int i = 0; i < tblChiTietHoaDon.getRowCount(); i++) {
            String id = tblChiTietHoaDon.getValueAt(i, 0).toString();
            String tenSach = tblChiTietHoaDon.getValueAt(i, 1).toString();
            String soLuong = tblChiTietHoaDon.getValueAt(i, 2).toString();
            String gia = tblChiTietHoaDon.getValueAt(i, 3).toString();

            cell = new PdfPCell(new Phrase(id));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase(tenSach));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase(soLuong));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase(formatTotalPrice(Float.parseFloat(gia)) ));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cell);
        }

        // Tính tổng tiền và khách trả
//        double tongTien = Double.parseDouble(txtTongTien.getText());
//        double khachTra = Double.parseDouble(txtKhachTra.getText());
        String tongTien = txtTongTien.getText();
        
        
        float khachTra = Float.parseFloat(txtKhachTra.getText()) ;
       // double thoiLai = khachTra - tongTien;
       String thoiLai = txt_ThoiLai.getText();

        // Tạo đối tượng Document để lưu hóa đơn vào file PDF
        com.itextpdf.text.Document document = new com.itextpdf.text.Document();
        try {
            PdfWriter.getInstance(document, new FileOutputStream(fileToSave.getAbsolutePath() + ".pdf"));
            document.open();

            // Thêm tiêu đề của hóa đơn
            Paragraph paragraph = new Paragraph("HOA DON", FontFactory.getFont(FontFactory.TIMES_BOLD, 24));
            paragraph.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraph);
            
            document.add(new Paragraph("\n"));
            // tạo ké gạch
            LineSeparator lineSeparator = new LineSeparator();
            lineSeparator.setLineColor(BaseColor.LIGHT_GRAY);
            lineSeparator.setLineWidth(0.5f);
            document.add(lineSeparator);
            //
            Paragraph paragraphMaHD = new Paragraph("ID HOA DON: " + maHoaDon,font);
            paragraphMaHD.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraphMaHD);
           // document.add(new Paragraph("\nMã hóa đơn: " + maHoaDon,font));
           
            Paragraph paragraphMaNV = new Paragraph("ID STAFF: " + maNhanVien,font);
            paragraphMaNV.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraphMaNV);
            
            Paragraph paragraphMaKH = new Paragraph("ID CUSTOMER: " + maKhachHang,font);
            paragraphMaKH.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraphMaKH);
         
            //document.add(new Paragraph("Mã nhân viên: " + maNhanVien,font));
            
            document.add(new Paragraph("\n"));
            document.add(lineSeparator);
            document.add(new Paragraph("\n"));
            
            document.add(table);
            
            document.add(new Paragraph("\n"));
            document.add(lineSeparator);
            document.add(new Paragraph("\n"));
            
            Paragraph paragraphTotal = new Paragraph("TOTAL + VAT: " + tongTien + " VND",font);
            paragraphTotal.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraphTotal);
            
//            document.add(new Paragraph("Tổng tiền: " + tongTien + " VND",font));
            Paragraph paragraphKhachtra = new Paragraph("CUSTOMER PAID:" + formatTotalPrice(khachTra) + " VND", font);
            paragraphKhachtra.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraphKhachtra);

 

        //    document.add(new Paragraph("Khách trả: " + khachTra + " VND", font));
            Paragraph paragraphline = new Paragraph("-----------------------------------------------------------------------------");
            paragraphline.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraphline);
            
            
            
            Paragraph paragraphThoiLai = new Paragraph("CHANGE FOR THE CUSTOMER: " + thoiLai + " VND",font);
            paragraphThoiLai.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraphThoiLai);

          //  document.add(new Paragraph("Thối lại: " + thoiLai + " VND",font));
          
            document.add(new Paragraph("\n"));
            
            // tạo ké gạch
            document.add(lineSeparator);
            
            Paragraph paragraphthankyou = new Paragraph("THANH YOU!\n",font);
            paragraphthankyou.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraphthankyou);
            
           document.add(new Paragraph("\n"));
            
            Paragraph paragraphNgayIn = new Paragraph("DATECREATE: " + LocalDate.now(), font);
            paragraphNgayIn.setAlignment(Element.ALIGN_RIGHT);
            document.add(paragraphNgayIn);

           // document.add(new Paragraph("Ngày in: " + LocalDate.now(), font));

            // Ký tên và ghi rõ thông tin nhân viên in hóa đơn
        
            document.close();
            } catch (Exception ex) {
            ex.printStackTrace();
            }
}
}
 public void setPhimtat(){
     Button_huy.setMnemonic(KeyEvent.VK_H);
     Button_huy.setToolTipText("Click để thoát!");
     Button_inHoaDon.setMnemonic(KeyEvent.VK_I);
     Button_inHoaDon.setToolTipText("Click để in hóa đơn!");
 }
}
